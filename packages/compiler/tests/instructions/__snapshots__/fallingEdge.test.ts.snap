// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fallingEdge if the generated AST, WAT and memory map match the snapshot 1`] = `
[
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "fallingEdge",
      },
    ],
    "instruction": "module",
    "lineNumber": 0,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "input",
      },
    ],
    "instruction": "int",
    "lineNumber": 2,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "output",
      },
    ],
    "instruction": "int",
    "lineNumber": 3,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "&output",
      },
    ],
    "instruction": "push",
    "lineNumber": 5,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "input",
      },
    ],
    "instruction": "push",
    "lineNumber": 6,
  },
  {
    "arguments": [],
    "instruction": "fallingEdge",
    "lineNumber": 7,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "int",
      },
    ],
    "instruction": "if",
    "lineNumber": 8,
  },
  {
    "arguments": [
      {
        "isInteger": true,
        "type": "literal",
        "value": 1,
      },
    ],
    "instruction": "push",
    "lineNumber": 9,
  },
  {
    "arguments": [],
    "instruction": "else",
    "lineNumber": 10,
  },
  {
    "arguments": [
      {
        "isInteger": true,
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 11,
  },
  {
    "arguments": [],
    "instruction": "ifEnd",
    "lineNumber": 12,
  },
  {
    "arguments": [],
    "instruction": "store",
    "lineNumber": 13,
  },
  {
    "arguments": [],
    "instruction": "moduleEnd",
    "lineNumber": 15,
  },
]
`;

exports[`fallingEdge if the generated AST, WAT and memory map match the snapshot 2`] = `
"(module
  (type (;0;) (func))
  (import "js" "memory" (memory (;0;) 1))
  (func (;0;) (type 0)
    (local i32)
    i32.const 4
    i32.const 0
    i32.load
    local.set 0
    local.get 0
    i32.const 8
    i32.load
    i32.lt_s
    if (result i32)  ;; label = @1
      i32.const 1
    else
      i32.const 0
    end
    i32.const 8
    local.get 0
    i32.store
    if (result i32)  ;; label = @1
      i32.const 1
    else
      i32.const 0
    end
    i32.store)
  (export "test" (func 0)))
"
`;

exports[`fallingEdge if the generated AST, WAT and memory map match the snapshot 3`] = `
Map {
  "input" => {
    "byteAddress": 0,
    "default": 0,
    "elementWordSize": 4,
    "id": "input",
    "isInteger": true,
    "isPointer": false,
    "isPointingToInteger": false,
    "isPointingToPointer": false,
    "numberOfElements": 1,
    "type": "int",
    "wordAlignedAddress": 0,
    "wordAlignedSize": 1,
  },
  "output" => {
    "byteAddress": 4,
    "default": 0,
    "elementWordSize": 4,
    "id": "output",
    "isInteger": true,
    "isPointer": false,
    "isPointingToInteger": false,
    "isPointingToPointer": false,
    "numberOfElements": 1,
    "type": "int",
    "wordAlignedAddress": 1,
    "wordAlignedSize": 1,
  },
  "__fallingEdgeDetector_previousValue7" => {
    "byteAddress": 8,
    "default": 0,
    "elementWordSize": 4,
    "id": "__fallingEdgeDetector_previousValue7",
    "isInteger": true,
    "isPointer": false,
    "isPointingToInteger": false,
    "isPointingToPointer": false,
    "numberOfElements": 1,
    "type": "int",
    "wordAlignedAddress": 2,
    "wordAlignedSize": 1,
  },
}
`;
