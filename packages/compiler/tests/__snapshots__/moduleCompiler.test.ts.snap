// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`moduleCompiler ast 1`] = `
[
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "abs",
      },
    ],
    "instruction": "module",
    "lineNumber": 1,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "DEFAULT_VALUE",
      },
      {
        "isInteger": true,
        "type": "literal",
        "value": -1,
      },
    ],
    "instruction": "int",
    "lineNumber": 4,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "in:1",
      },
      {
        "type": "identifier",
        "value": "&DEFAULT_VALUE",
      },
    ],
    "instruction": "int*",
    "lineNumber": 5,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "out",
      },
      {
        "isInteger": true,
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "int",
    "lineNumber": 6,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "arr",
      },
      {
        "isInteger": true,
        "type": "literal",
        "value": 32,
      },
      {
        "isInteger": true,
        "type": "literal",
        "value": -1,
      },
    ],
    "instruction": "int[]",
    "lineNumber": 7,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "int",
      },
      {
        "type": "identifier",
        "value": "input",
      },
    ],
    "instruction": "local",
    "lineNumber": 10,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "out",
      },
    ],
    "instruction": "push",
    "lineNumber": 13,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "in:1",
      },
    ],
    "instruction": "push",
    "lineNumber": 14,
  },
  {
    "arguments": [],
    "instruction": "load",
    "lineNumber": 15,
  },
  {
    "arguments": [],
    "instruction": "load",
    "lineNumber": 16,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "input",
      },
    ],
    "instruction": "localSet",
    "lineNumber": 17,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "input",
      },
    ],
    "instruction": "localGet",
    "lineNumber": 18,
  },
  {
    "arguments": [
      {
        "isInteger": true,
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 19,
  },
  {
    "arguments": [],
    "instruction": "lessThan",
    "lineNumber": 20,
  },
  {
    "arguments": [],
    "instruction": "if",
    "lineNumber": 21,
  },
  {
    "arguments": [
      {
        "isInteger": true,
        "type": "literal",
        "value": 0,
      },
    ],
    "instruction": "push",
    "lineNumber": 22,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "input",
      },
    ],
    "instruction": "localGet",
    "lineNumber": 23,
  },
  {
    "arguments": [],
    "instruction": "sub",
    "lineNumber": 24,
  },
  {
    "arguments": [],
    "instruction": "else",
    "lineNumber": 25,
  },
  {
    "arguments": [
      {
        "type": "identifier",
        "value": "input",
      },
    ],
    "instruction": "localGet",
    "lineNumber": 26,
  },
  {
    "arguments": [],
    "instruction": "ifEnd",
    "lineNumber": 27,
  },
  {
    "arguments": [],
    "instruction": "store",
    "lineNumber": 28,
  },
  {
    "arguments": [],
    "instruction": "moduleEnd",
    "lineNumber": 29,
  },
]
`;

exports[`moduleCompiler compiled code 1`] = `
[
  104,
  5,
  1,
  127,
  1,
  127,
  1,
  127,
  1,
  127,
  1,
  127,
  65,
  8,
  40,
  2,
  0,
  65,
  4,
  40,
  2,
  0,
  33,
  1,
  32,
  1,
  65,
  255,
  255,
  3,
  74,
  4,
  127,
  65,
  0,
  5,
  32,
  1,
  11,
  40,
  2,
  0,
  33,
  2,
  32,
  2,
  65,
  255,
  255,
  3,
  74,
  4,
  127,
  65,
  0,
  5,
  32,
  2,
  11,
  40,
  2,
  0,
  33,
  0,
  32,
  0,
  65,
  0,
  72,
  4,
  127,
  65,
  0,
  32,
  0,
  107,
  5,
  32,
  0,
  11,
  33,
  4,
  33,
  3,
  32,
  3,
  65,
  255,
  255,
  3,
  74,
  4,
  127,
  65,
  0,
  5,
  32,
  3,
  11,
  32,
  4,
  54,
  2,
  0,
  11,
]
`;
